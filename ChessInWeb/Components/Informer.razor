<div class="informer">
    
    <TimerComponent TimeRanOut="@TimeRanOut" WhiteTimer="@(WhiteSided ? false : true)" OpponentSide="true" @ref=opponentTimer></TimerComponent>
    <div class="informer-content">@Message</div>
    <TimerComponent TimeRanOut="@TimeRanOut" WhiteTimer="@(WhiteSided ? true : false)" OpponentSide="false" @ref=playerTimer></TimerComponent>
</div>



@code {
    [Parameter]
    public string Message { get; set; } = "None";
    [Parameter]
    public EventCallback<string> MessageChanged { get; set; }
    [Parameter]
    public EventCallback<bool> TimeRanOut { get; set; }
    [Parameter]
    public bool WhiteSided { get; set; } = true;
    private TimerComponent opponentTimer;
    private TimerComponent playerTimer;
    private bool isPlayersRunning;
    protected override async Task OnInitializedAsync()
    {
        isPlayersRunning = WhiteSided;
    }
    public void SwitchTimer()
    {
        if (isPlayersRunning)
        {
            playerTimer.Stop();
            opponentTimer.Start();
        }
        else
        {
            opponentTimer.Stop();
            playerTimer.Start();
        }
        isPlayersRunning = !isPlayersRunning;
    }
    public void StopTimers()
    {
        playerTimer.Stop();
        opponentTimer.Stop();
    }
}
